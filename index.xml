<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ChenjingBlog</title>
    <link>http://mickeyding.github.io/</link>
    <description>Recent content on ChenjingBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Nov 2021 17:44:28 +0800</lastBuildDate><atom:link href="http://mickeyding.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>位姿变换</title>
      <link>http://mickeyding.github.io/posts/%E4%BD%8D%E5%A7%BF%E5%8F%98%E6%8D%A2/</link>
      <pubDate>Mon, 08 Nov 2021 17:44:28 +0800</pubDate>
      
      <guid>http://mickeyding.github.io/posts/%E4%BD%8D%E5%A7%BF%E5%8F%98%E6%8D%A2/</guid>
      <description>位姿变换 &amp;mdash;丁晨静（dingchenjing@sensetime.com)
各坐标系变换总结 旋转矩阵的变换 坐标系运动方向正负判定   坐标系运动方向判断：右手使用右手螺旋定则，左手使用左手螺旋定则，大拇指方向为坐标轴指向，四指指向为正
  坐标系运动方向的正负和坐标点运动的方向相反
  变换顺序 在右手坐标系中，是左结合，即最后一个矩阵最先应用
静态坐标轴旋转和动态坐标轴旋转 如何从坐标系变换得到在初始坐标系下变换后的点的坐标？
坐标系绕动态轴运算：每一次是按变换后的新的坐标系的轴运算，得到的角度取负再带入R矩阵求变换矩阵
与坐标按初始坐标系固定轴旋转效果一致。
变换实例 下面以cityscapes涉及的右手相机坐标系O1转换到右手标准相机坐标系O2为例：
 首先绕O1 x轴 旋转-90°，得到坐标系M1（forward:x, left:z, down:y)；（相当于某点绕O1x轴旋转+90°） 再绕M1的y轴旋转+90°，得到坐标系O2；（相当于某点再绕M1y轴旋转-90°）  综上变换矩阵为 T = Ry(-90)Rx(90)
# 向量绕固定轴旋转 R = euler_matrix(np.radians(90), np.radians(-90), 0, &amp;#39;sxyz&amp;#39;) x = np.array([[1,0,0,1]]) y = np.array([[0,1,0,1]]) z = np.array([[0,0,1,1]]) z_new = R @ x.T neg_x_new = R @ y.T neg_y_new = R @ z.T print(neg_x_new.T, neg_y_new.T, z_new.T) # x-&amp;gt;z; y-&amp;gt;neg_x, z-&amp;gt;neg_y &amp;#34;&amp;#34;&amp;#34; eg_x_new.</description>
    </item>
    
  </channel>
</rss>
